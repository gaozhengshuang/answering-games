// Generated by github.com/davyxu/tabtoy
// Version: 2.8.7
// DO NOT EDIT!!
using System.Collections.Generic;

namespace table
{
	
	

	// Defined in table: ProtoMsgIndex
	
	public partial class ProtoMsgIndex
	{
	
		public tabtoy.Logger TableLogger = new tabtoy.Logger();
	
		
		/// <summary> 
		/// ProtoId
		/// </summary>
		public List<ProtoIdDefine> ProtoId = new List<ProtoIdDefine>(); 
	
	
		#region Index code
	 	Dictionary<int, ProtoIdDefine> _ProtoIdById = new Dictionary<int, ProtoIdDefine>();
        public ProtoIdDefine GetProtoIdById(int Id, ProtoIdDefine def = default(ProtoIdDefine))
        {
            ProtoIdDefine ret;
            if ( _ProtoIdById.TryGetValue( Id, out ret ) )
            {
                return ret;
            }
			
			if ( def == default(ProtoIdDefine) )
			{
				TableLogger.ErrorLine("GetProtoIdById failed, Id: {0}", Id);
			}

            return def;
        }
		Dictionary<string, ProtoIdDefine> _ProtoIdByName = new Dictionary<string, ProtoIdDefine>();
        public ProtoIdDefine GetProtoIdByName(string Name, ProtoIdDefine def = default(ProtoIdDefine))
        {
            ProtoIdDefine ret;
            if ( _ProtoIdByName.TryGetValue( Name, out ret ) )
            {
                return ret;
            }
			
			if ( def == default(ProtoIdDefine) )
			{
				TableLogger.ErrorLine("GetProtoIdByName failed, Name: {0}", Name);
			}

            return def;
        }
		
	
		#endregion
		#region Deserialize code
		
		static tabtoy.DeserializeHandler<ProtoMsgIndex> _ProtoMsgIndexDeserializeHandler;
		static tabtoy.DeserializeHandler<ProtoMsgIndex> ProtoMsgIndexDeserializeHandler
		{
			get
			{
				if (_ProtoMsgIndexDeserializeHandler == null )
				{
					_ProtoMsgIndexDeserializeHandler = new tabtoy.DeserializeHandler<ProtoMsgIndex>(Deserialize);
				}

				return _ProtoMsgIndexDeserializeHandler;
			}
		}
		public static void Deserialize( ProtoMsgIndex ins, tabtoy.DataReader reader )
		{
 			int tag = -1;
            while ( -1 != (tag = reader.ReadTag()))
            {
                switch (tag)
                { 
                	case 0xa0000:
                	{
						ins.ProtoId.Add( reader.ReadStruct<ProtoIdDefine>(ProtoIdDefineDeserializeHandler) );
                	}
                	break; 
                }
             }

			
			// Build ProtoId Index
			for( int i = 0;i< ins.ProtoId.Count;i++)
			{
				var element = ins.ProtoId[i];
				
				ins._ProtoIdById.Add(element.Id, element);
				
				ins._ProtoIdByName.Add(element.Name, element);
				
			}
			
		}
		static tabtoy.DeserializeHandler<ProtoIdDefine> _ProtoIdDefineDeserializeHandler;
		static tabtoy.DeserializeHandler<ProtoIdDefine> ProtoIdDefineDeserializeHandler
		{
			get
			{
				if (_ProtoIdDefineDeserializeHandler == null )
				{
					_ProtoIdDefineDeserializeHandler = new tabtoy.DeserializeHandler<ProtoIdDefine>(Deserialize);
				}

				return _ProtoIdDefineDeserializeHandler;
			}
		}
		public static void Deserialize( ProtoIdDefine ins, tabtoy.DataReader reader )
		{
 			int tag = -1;
            while ( -1 != (tag = reader.ReadTag()))
            {
                switch (tag)
                { 
                	case 0x10000:
                	{
						ins.Id = reader.ReadInt32();
                	}
                	break; 
                	case 0x60001:
                	{
						ins.Name = reader.ReadString();
                	}
                	break; 
                }
             }

			
		}
		#endregion
	

	} 

	// Defined in table: ProtoId
	[System.Serializable]
	public partial class ProtoIdDefine
	{
	
		
		/// <summary> 
		/// 唯一id
		/// </summary>
		public int Id = 0; 
		
		
		public string Name = ""; 
	
	

	} 

}
