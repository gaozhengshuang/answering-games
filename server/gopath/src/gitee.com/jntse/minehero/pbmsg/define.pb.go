// Code generated by protoc-gen-go. DO NOT EDIT.
// source: define.proto

package msg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 道具id规则 = 类型 * 1000 + id
type ItemId int32

const (
	ItemId_YuanBao      ItemId = 6001
	ItemId_Coupon       ItemId = 6002
	ItemId_Gold         ItemId = 6003
	ItemId_FreeStep     ItemId = 6005
	ItemId_Diamond      ItemId = 10001
	ItemId_DiamondParts ItemId = 10002
)

var ItemId_name = map[int32]string{
	6001:  "YuanBao",
	6002:  "Coupon",
	6003:  "Gold",
	6005:  "FreeStep",
	10001: "Diamond",
	10002: "DiamondParts",
}
var ItemId_value = map[string]int32{
	"YuanBao":      6001,
	"Coupon":       6002,
	"Gold":         6003,
	"FreeStep":     6005,
	"Diamond":      10001,
	"DiamondParts": 10002,
}

func (x ItemId) Enum() *ItemId {
	p := new(ItemId)
	*p = x
	return p
}
func (x ItemId) String() string {
	return proto.EnumName(ItemId_name, int32(x))
}
func (x *ItemId) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ItemId_value, data, "ItemId")
	if err != nil {
		return err
	}
	*x = ItemId(value)
	return nil
}
func (ItemId) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

type ItemType int32

const (
	ItemType_Digital       ItemType = 1
	ItemType_ShoppingCard  ItemType = 2
	ItemType_DailyUse      ItemType = 3
	ItemType_Toy           ItemType = 4
	ItemType_MobileCard    ItemType = 5
	ItemType_Currency      ItemType = 6
	ItemType_CarAccessory  ItemType = 7
	ItemType_Advertisement ItemType = 8
	ItemType_Smallware     ItemType = 9
	ItemType_DiamondItem   ItemType = 10
)

var ItemType_name = map[int32]string{
	1:  "Digital",
	2:  "ShoppingCard",
	3:  "DailyUse",
	4:  "Toy",
	5:  "MobileCard",
	6:  "Currency",
	7:  "CarAccessory",
	8:  "Advertisement",
	9:  "Smallware",
	10: "DiamondItem",
}
var ItemType_value = map[string]int32{
	"Digital":       1,
	"ShoppingCard":  2,
	"DailyUse":      3,
	"Toy":           4,
	"MobileCard":    5,
	"Currency":      6,
	"CarAccessory":  7,
	"Advertisement": 8,
	"Smallware":     9,
	"DiamondItem":   10,
}

func (x ItemType) Enum() *ItemType {
	p := new(ItemType)
	*p = x
	return p
}
func (x ItemType) String() string {
	return proto.EnumName(ItemType_name, int32(x))
}
func (x *ItemType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ItemType_value, data, "ItemType")
	if err != nil {
		return err
	}
	*x = ItemType(value)
	return nil
}
func (ItemType) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

type IpHost struct {
	Ip               *string `protobuf:"bytes,1,opt,name=ip" json:"ip,omitempty"`
	Port             *int32  `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *IpHost) Reset()                    { *m = IpHost{} }
func (m *IpHost) String() string            { return proto.CompactTextString(m) }
func (*IpHost) ProtoMessage()               {}
func (*IpHost) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *IpHost) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *IpHost) GetPort() int32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

type PairNumItem struct {
	Itemid           *uint32 `protobuf:"varint,1,opt,name=itemid" json:"itemid,omitempty"`
	Num              *uint32 `protobuf:"varint,2,opt,name=num" json:"num,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PairNumItem) Reset()                    { *m = PairNumItem{} }
func (m *PairNumItem) String() string            { return proto.CompactTextString(m) }
func (*PairNumItem) ProtoMessage()               {}
func (*PairNumItem) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

func (m *PairNumItem) GetItemid() uint32 {
	if m != nil && m.Itemid != nil {
		return *m.Itemid
	}
	return 0
}

func (m *PairNumItem) GetNum() uint32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

func init() {
	proto.RegisterType((*IpHost)(nil), "msg.IpHost")
	proto.RegisterType((*PairNumItem)(nil), "msg.PairNumItem")
	proto.RegisterEnum("msg.ItemId", ItemId_name, ItemId_value)
	proto.RegisterEnum("msg.ItemType", ItemType_name, ItemType_value)
}

func init() { proto.RegisterFile("define.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 312 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x2c, 0xce, 0xcd, 0x4e, 0xea, 0x50,
	0x10, 0xc0, 0xf1, 0x94, 0x42, 0x69, 0xa7, 0x2d, 0x77, 0x98, 0x15, 0x4b, 0xc2, 0x8a, 0xb0, 0xe8,
	0x3b, 0x70, 0x4b, 0xee, 0x95, 0x85, 0x84, 0x04, 0x5c, 0xb8, 0x31, 0x39, 0xd2, 0x11, 0x4f, 0xd2,
	0xf3, 0x91, 0xd3, 0x53, 0x4d, 0x1f, 0x43, 0x5f, 0xc1, 0x27, 0x54, 0xe3, 0xde, 0x94, 0xb0, 0x9c,
	0xe4, 0x37, 0x33, 0x7f, 0xc8, 0x2a, 0x7e, 0x92, 0x9a, 0x0b, 0xeb, 0x8c, 0x37, 0x14, 0xaa, 0xe6,
	0xbc, 0x58, 0x40, 0xb4, 0xb5, 0x37, 0xa6, 0xf1, 0x04, 0x30, 0x90, 0x76, 0x16, 0xcc, 0x83, 0x65,
	0x42, 0x19, 0x0c, 0xad, 0x71, 0x7e, 0x36, 0x98, 0x07, 0xcb, 0xd1, 0x62, 0x05, 0xe9, 0x5e, 0x48,
	0xb7, 0x6b, 0xd5, 0xd6, 0xb3, 0xa2, 0x09, 0x44, 0xd2, 0xb3, 0x92, 0xd5, 0x05, 0xe7, 0x94, 0x42,
	0xa8, 0x5b, 0x75, 0xb1, 0xf9, 0xea, 0x01, 0xa2, 0x1e, 0x6d, 0x2b, 0xca, 0x60, 0x7c, 0xdf, 0x0a,
	0xfd, 0x57, 0x18, 0xfc, 0x2c, 0x28, 0x85, 0xa8, 0x34, 0xad, 0x35, 0x1a, 0xbf, 0x0a, 0x4a, 0x60,
	0xf8, 0xdf, 0xd4, 0x15, 0x7e, 0x17, 0x94, 0x43, 0xfc, 0xcf, 0x31, 0x1f, 0x3c, 0x5b, 0xfc, 0x29,
	0xfa, 0xa5, 0x8d, 0x14, 0xca, 0xe8, 0x0a, 0xdf, 0x76, 0x34, 0x85, 0xec, 0x3a, 0xed, 0x85, 0xf3,
	0x0d, 0xbe, 0xef, 0x56, 0x1f, 0x01, 0xc4, 0xfd, 0x83, 0x63, 0x67, 0x99, 0xd2, 0x5e, 0x9f, 0xa5,
	0x17, 0x35, 0x06, 0x84, 0x90, 0x1d, 0x9e, 0x8d, 0xb5, 0x52, 0x9f, 0x4b, 0xe1, 0x2a, 0x1c, 0x50,
	0x06, 0xf1, 0x46, 0xc8, 0xba, 0xbb, 0x6b, 0x18, 0x43, 0x1a, 0x43, 0x78, 0x34, 0x1d, 0x0e, 0x69,
	0x02, 0x70, 0x6b, 0x1e, 0x65, 0xcd, 0x17, 0x36, 0xea, 0x59, 0xd9, 0x3a, 0xc7, 0xfa, 0xd4, 0x61,
	0xd4, 0x9f, 0x29, 0x85, 0x5b, 0x9f, 0x4e, 0xdc, 0x34, 0xc6, 0x75, 0x38, 0xa6, 0x29, 0xe4, 0xeb,
	0xea, 0x85, 0x9d, 0x97, 0x0d, 0x2b, 0xd6, 0x1e, 0x63, 0xca, 0x21, 0x39, 0x28, 0x51, 0xd7, 0xaf,
	0xc2, 0x31, 0x26, 0xf4, 0x07, 0xd2, 0x6b, 0x67, 0x9f, 0x86, 0xf0, 0x1b, 0x00, 0x00, 0xff, 0xff,
	0x1e, 0xfe, 0xc1, 0x7f, 0x69, 0x01, 0x00, 0x00,
}
